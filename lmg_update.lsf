clear;
matlabload('setup.mat');	
material=1 ;

path=pwd;
a=ls;

# find last iteration completed by .mat file
for(i=0; i<1000; i=i+1)
	{
	condition=findstring(a,"iteration"+num2str(i)+'.mat');

	if (condition<1) 
		{iteration=i;
		i=1001;
		}
	}

## Update Simulation File Using Previous Iteration

if(iteration>0)

{
	load(path+'/Iteration '+num2str(iteration-1)+'.fsp');
	switchtolayout;

	if(iteration>1)
	{
	select('import');
	delete;
	}

	# import the data from file
	filename = path+'/iteration'+num2str(iteration)+'.txt';
	upper_surface = 1; # set to 0 to import the lower surface
	file_units = "m";
	x0 = 0;
	y0 = 0;
	z0 = 0;
	reverse_index_order=0; # set to 1 to invert x and y axes

	addimport;
	set("override mesh order from material database",1);
	set("mesh order",3);
	matlabload('struct'+num2str(iteration)+'.mat');
	if(setup.dimension==2){importbinary2(shape_matrix,x,y,[-.5e-6,.5e-6]);}
	else {importbinary2(shape_matrix,x,y,z);}
	
	if (material==1){set('material','SeTe (New nk, Thin Film, Flat) ');}
	if (material==2){set('material','CdTe - Sopra');}
	if (material==3){set('material','Se (Amorphous)');}
	if (material==4){set('material','PbSe - Adachi');}
	if (material==5){set('material','Se_PbSe_20170425');}


	# create 3x3 array of import objects to reduce boundary error
	x_span = get("x span");
	z_span = get("z span");
	copy(x_span,0,0);
	copy(0,0,-z_span);
	copy(-x_span,0,0);
	copy(-x_span,0,0);
	copy(0,0,z_span);
	copy(0,0,z_span);
	copy(x_span,0,0);
	copy(x_span,0,0);

	save(path+'/Iteration '+num2str(iteration)+'.fsp');

}

	# Create multiple simulations files for incoherent sources
if (setup.source_coherence==0)
{
	for (i=1:setup.source_number)
	{
	
		load(path+'/Iteration '+num2str(iteration)+'.fsp');
			#delete other sources
			for (j=1:setup.source_number)
			{ 
			
			if (i!=j)
				{
				select("source_"+num2str(j)); 
				delete;
				}
			
			}
		save(path+'/temp'+num2str(i)+'.fsp');
	}

}

exit(2);